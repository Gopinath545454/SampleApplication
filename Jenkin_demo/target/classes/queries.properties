#/* Copyright (C) Leanswift Solutions, Inc - All Rights Reserved
# * Unauthorized copying of this file, via any medium is strictly prohibited.
# * Proprietary and confidential.
# * Terms and conditions in LEANSWIFT_EULA.TXT
# */

connector.order.isExists=SELECT OAORNO ORNO, OAOREF OREF, OACUNO CUNO FROM ${connector.dbSchema}.OXHEAD WHERE OACONO = :cono AND OAOREF = :orderRef

db2.connector.invoiceHistory.retrieve=SELECT FSLEDG10.ESCONO CONO, FSLEDG10.ESDIVI DIVI, FSLEDG10.ESINYR INYR, FSLEDG10.ESCUNO CUNO, FSLEDG10.ESPYNO PYNO, FSLEDG10.ESCINO CINO, FSLEDG10.ESCUAM CUAM, SUM(FSLEDG20.ESCUAM)*-1 PAID, FSLEDG10.ESCUCD CUCD, FSLEDG10.ESIVDT IVDT, FSLEDG10.ESDUDT DUDT, UAORNO ORNO, COUNT(UADLIX) NUM_DELY, OACUOR CUOR  FROM ${connector.dbSchema}.FSLEDG FSLEDG10  LEFT JOIN ${connector.dbSchema}.FSLEDG FSLEDG20  ON FSLEDG10.ESCONO=FSLEDG20.ESCONO  AND FSLEDG10.ESDIVI=FSLEDG20.ESDIVI  AND FSLEDG10.ESINYR=FSLEDG20.ESINYR  AND FSLEDG10.ESPYNO=FSLEDG20.ESPYNO  AND FSLEDG10.ESCINO=FSLEDG20.ESCINO  AND FSLEDG10.ESTRCD = '10' AND FSLEDG20.ESTRCD = '20' JOIN (SELECT UACONO, UAORNO, ${connector.invoiceField}, UAYEA4, COUNT(UADLIX) UADLIX FROM ${connector.dbSchema}.FSLEDG FSLEDG10 INNER JOIN ${connector.dbSchema}.ODHEAD ON FSLEDG10.ESCONO=UACONO AND FSLEDG10.ESCINO=''||${connector.invoiceField} AND FSLEDG10.ESINYR=UAYEA4 AND FSLEDG10.ESDIVI=UADIVI GROUP BY UACONO, UAORNO, ${connector.invoiceField}, UAYEA4) ORNO ON FSLEDG10.ESCONO=ORNO.UACONO AND FSLEDG10.ESCINO=''||ORNO.${connector.invoiceField} JOIN ${connector.dbSchema}.OOHEAD ON ORNO.UACONO=OACONO AND ORNO.UAORNO=OAORNO WHERE FSLEDG10.ESTRCD = '10'  AND FSLEDG10.ESCONO = ?  AND FSLEDG10.ESCUNO = ?  AND FSLEDG10.ESIVDT > ? AND FSLEDG10.ESIVDT < ? GROUP BY FSLEDG10.ESCONO, FSLEDG10.ESDIVI, FSLEDG10.ESINYR, FSLEDG10.ESCUNO, FSLEDG10.ESPYNO, FSLEDG10.ESCINO, FSLEDG10.ESCUAM, FSLEDG10.ESCUCD, FSLEDG10.ESIVDT, FSLEDG10.ESDUDT, UAORNO, OACUOR  ORDER BY FSLEDG10.ESCONO, FSLEDG10.ESDIVI, FSLEDG10.ESPYNO, FSLEDG10.ESINYR, FSLEDG10.ESCINO
mssql.connector.invoiceHistory.retrieve=SELECT FSLEDG10.ESCONO CONO, FSLEDG10.ESDIVI DIVI, FSLEDG10.ESINYR INYR, FSLEDG10.ESCUNO CUNO, FSLEDG10.ESPYNO PYNO, FSLEDG10.ESCINO CINO, FSLEDG10.ESCUAM CUAM, SUM(FSLEDG20.ESCUAM)*-1 PAID, FSLEDG10.ESCUCD CUCD, FSLEDG10.ESIVDT IVDT, FSLEDG10.ESDUDT DUDT, UAORNO ORNO, COUNT(UADLIX) NUM_DELY, OACUOR CUOR FROM ${connector.dbSchema}.FSLEDG FSLEDG10 LEFT JOIN ${connector.dbSchema}.FSLEDG FSLEDG20 ON FSLEDG10.ESCONO=FSLEDG20.ESCONO AND FSLEDG10.ESDIVI=FSLEDG20.ESDIVI AND FSLEDG10.ESINYR=FSLEDG20.ESINYR AND FSLEDG10.ESPYNO=FSLEDG20.ESPYNO AND FSLEDG10.ESCINO=FSLEDG20.ESCINO AND FSLEDG10.ESTRCD = '10' AND FSLEDG20.ESTRCD = '20' JOIN (SELECT UACONO, UAORNO, ${connector.invoiceField}, UAYEA4, COUNT(UADLIX) UADLIX FROM ${connector.dbSchema}.FSLEDG FSLEDG10 INNER JOIN ${connector.dbSchema}.ODHEAD ON FSLEDG10.ESCONO=UACONO AND FSLEDG10.ESCINO=CAST (${connector.invoiceField} AS VARCHAR) AND FSLEDG10.ESINYR=UAYEA4 AND FSLEDG10.ESDIVI=UADIVI GROUP BY UACONO, UAORNO, ${connector.invoiceField}, UAYEA4) ORNO ON FSLEDG10.ESCONO=ORNO.UACONO AND FSLEDG10.ESCINO=CAST (ORNO.${connector.invoiceField} AS VARCHAR) JOIN ${connector.dbSchema}.OOHEAD ON ORNO.UACONO=OACONO AND ORNO.UAORNO=OAORNO WHERE FSLEDG10.ESTRCD = '10'  AND FSLEDG10.ESCONO = ?  AND FSLEDG10.ESCUNO = ? and FSLEDG10.ESIVDT > ? and FSLEDG10.ESIVDT < ? GROUP BY FSLEDG10.ESCONO, FSLEDG10.ESDIVI, FSLEDG10.ESINYR, FSLEDG10.ESCUNO, FSLEDG10.ESPYNO, FSLEDG10.ESCINO, FSLEDG10.ESCUAM, FSLEDG10.ESCUCD, FSLEDG10.ESIVDT, FSLEDG10.ESDUDT, UAORNO, OACUOR ORDER BY FSLEDG10.ESCONO, FSLEDG10.ESDIVI, FSLEDG10.ESPYNO, FSLEDG10.ESINYR, FSLEDG10.ESCINO

connector.orderTracking.list.retrieve=SELECT OQDLIX,ORETRN,OQRIDN FROM ${connector.dbSchema}.MHDISH INNER JOIN ${connector.dbSchema}.MPTRNS ON OQCONO=ORCONO AND OQDLIX=ORDLIX AND OQINOU=ORINOU AND OQWHLO=ORWHLO WHERE OQCONO = :cono AND OQINOU=1 AND OQRORC = 3 AND OQRIDN IN ( :orderNos ) GROUP BY OQRIDN,ORETRN,OQDLIX ORDER BY OQRIDN

connector.items.list.retrieve=SELECT MITMAS.*, OPRBAS.ODSAPR FROM ${connector.dbSchema}.MITMAS AS MITMAS LEFT JOIN ${connector.dbSchema}.OPRBAS AS OPRBAS ON MITMAS.MMCONO=OPRBAS.ODCONO AND MITMAS.MMITNO=OPRBAS.ODITNO AND OPRBAS.ODPRRF = :priceList AND OPRBAS.ODCUCD = :currency AND OPRBAS.ODLVDT > :currentDate AND OPRBAS.ODFVDT < :currentDate WHERE MITMAS.MMITNO in ( :itemNos )

connector.items.list.count=SELECT COUNT(*) FROM ${connector.dbSchema}.MITMAS AS MITMAS LEFT JOIN ${connector.dbSchema}.OPRBAS AS OPRBAS ON MITMAS.MMCONO=OPRBAS.ODCONO AND MITMAS.MMITNO=OPRBAS.ODITNO AND OPRBAS.ODPRRF = :priceList AND OPRBAS.ODCUCD = :currency AND OPRBAS.ODLVDT > :currentDate AND OPRBAS.ODFVDT < :currentDate JOIN ${connector.dbSchema}.MITBAL AS MITBAL ON MITBAL.MBCONO = MITMAS.MMCONO AND MITBAL.MBITNO = MITMAS.MMITNO WHERE MITBAL.MBFACI = :faci AND MITBAL.MBWHLO = :whlo

connector.items.list.paged.retrieve=SELECT TEMP.* FROM (SELECT ROW_NUMBER() OVER (ORDER BY MITMAS.MMITNO) AS ROWNUMBER, MITMAS.*, MITBAL.MBTOMU, OPRBAS.ODSAPR FROM ${connector.dbSchema}.MITMAS AS MITMAS LEFT JOIN ${connector.dbSchema}.OPRBAS AS OPRBAS ON MITMAS.MMCONO=OPRBAS.ODCONO AND MITMAS.MMITNO=OPRBAS.ODITNO AND OPRBAS.ODPRRF = :priceList AND OPRBAS.ODCUCD = :currency AND OPRBAS.ODLVDT > :currentDate AND OPRBAS.ODFVDT < :currentDate JOIN ${connector.dbSchema}.MITBAL AS MITBAL ON MITBAL.MBCONO = MITMAS.MMCONO AND MITBAL.MBITNO = MITMAS.MMITNO WHERE MITBAL.MBFACI = :faci AND MITBAL.MBWHLO = :whlo ) AS TEMP WHERE ROWNUMBER BETWEEN :offset AND :limit

connector.items.pricelist.all.retrieve=SELECT MITMAS.*, OPRBAS.ODSAPR, OPRBAS.ODPRRF FROM ${connector.dbSchema}.MITMAS AS MITMAS LEFT JOIN ${connector.dbSchema}.OPRBAS AS OPRBAS ON MITMAS.MMCONO=OPRBAS.ODCONO AND MITMAS.MMITNO=OPRBAS.ODITNO AND OPRBAS.ODPRRF IN ( :priceList) AND OPRBAS.ODCUCD IN ( :currency ) AND OPRBAS.ODLVDT > :currentDate AND OPRBAS.ODFVDT < :currentDate WHERE MITMAS.MMITNO in ( :itemNos ) ORDER BY MITMAS.MMITNO, OPRBAS.ODPRRF

connector.deliveryOrders.retrieve=select OBCUNO,OKCUNM,CBEMAL,UBORNO,UBITNO,OBITDS,UBDLQA,OBALUN from (select OBCUNO,OKCUNM,UBORNO,UBITNO,OBITDS,UBDLQA,OBALUN from (select OBCUNO,UBORNO,UBITNO,OBITDS,UBDLQA,OBALUN from ${connector.dbSchema}.ODLINE join ${connector.dbSchema}.OOLINE on UBCONO=OBCONO and UBORNO=OBORNO and UBITNO=OBITNO where UBCONO= :cono and UBDLIX= :deliveryOrderNo) order join ${connector.dbSchema}.OCUSMA on OBCUNO=OKCUNO) customer left join ${connector.dbSchema}.CEMAIL on OBCUNO=CBEMKY and CBEMTP='01'

connector.deliveryOrders.update=update ${connector.dbSchema}.ODHEAD set UAORST=60 where UACONO=:cono and UADLIX=:deliveryOrderNo

connector.orderinvoice.retrieve=SELECT UAORNO, UADLIX, UAFACI, UAWHLO, UAIVNO, UAYEA4, UBITNO, UBIVQA, UBIVQT, UBDLQA,UBDLQT, UAIVDT, UACUCD, UHIVAM FROM ${connector.dbSchema}.ODHEAD JOIN ${connector.dbSchema}.ODLINE ON UACONO=UBCONO AND UADLIX=UBDLIX AND UAORNO=UBORNO LEFT OUTER JOIN ${connector.dbSchema}.OINVOH ON  UAIVNO=UHIVNO AND UAYEA4=UHYEA4 WHERE UACONO=:cono AND UADIVI = :divi  AND  UAORNO in (:orderNos)

connector.orderinvoice.shipped.retrieve=SELECT UAORNO, UADLIX, UAFACI, UAWHLO, UAIVNO, UAYEA4, UBITNO, UBIVQA, UBIVQT, UBDLQA, UBDLQT, UAIVDT, UACUCD, UHIVAM FROM ${connector.dbSchema}.ODHEAD JOIN ${connector.dbSchema}.ODLINE ON UACONO = UBCONO AND UADLIX = UBDLIX AND UAORNO = UBORNO AND UBSTCD <> 0 LEFT OUTER JOIN ${connector.dbSchema}.OINVOH ON UAIVNO = UHIVNO AND UAYEA4 = UHYEA4 WHERE UACONO = :cono AND UADIVI = :divi AND UAORNO in (:orderNos) AND UAORST >= 60

connector.salesperson.retrieve=SELECT OKCUNO,OKCUNM,OKSMCD FROM ${connector.dbSchema}.OCUSMA WHERE OKCONO=:cono AND OKSMCD in (:salesPersonIds)

#connector.salesperson.list.retrieve=SELECT OKSMCD, CTTX15, CTTX40, OKCUNO, OKCUNM FROM M3FDBDEM.OCUSMA INNER JOIN M3FDBDEM.CSYTAB ON OKCONO = CTCONO AND OKDIVI = CTDIVI AND CTSTCO = 'SMCD' AND OKSMCD = CTSTKY AND OKSMCD <> '' AND OKCONO = :cono 

connector.orderTracking.delivery.retrieve=SELECT OQRIDN, OQDLIX, ORETRN, OQETRN FROM ${connector.dbSchema}.MHDISH INNER JOIN ${connector.dbSchema}.MPTRNS ON OQCONO = ORCONO AND OQDLIX = ORDLIX AND OQINOU = ORINOU AND OQWHLO = ORWHLO WHERE OQCONO = :cono AND OQINOU = 1 AND OQRORC = 3 AND ((ORETRN) <> '' OR (OQETRN) <> '') AND OQDLIX in (:dlixNos)

connector.orderNumber.retrieve=select * from ${connector.dbSchema}.OXCNTR where EVORNO in (:orderNos) and EVCONO = :cono

connector.orderType.retrieve=select OOORTP, OOTX40 from ${connector.dbSchema}.OOTYPE where OOCONO = :cono and OOORTK in (:orderCategory) and OOOT18 = :inventoryAccCode

connector.orderCharge.retrieve=select USCRID,USCRD0 from ${connector.dbSchema}.ODCHRG where USCONO = :cono

connector.orderLineCharge.retrieve=select MJCRID,MJCRD0 from ${connector.dbSchema}.OLICHA where MJCONO = :cono

connector.warehouse.retrieve=select MWWHLO, MWWHNM from ${connector.dbSchema}.MITWHL where MWCONO = :cono

connector.systemConfig.retrieve.1=select CTSTKY, CTTX15, CTTX40 from ${connector.dbSchema}.CSYTAB where CTCONO = :cono and CTSTCO = :constantValue

connector.systemConfig.retrieve.2=select CTSTKY, CTTX15, CTTX40 from ${connector.dbSchema}.CSYTAB where CTCONO = :cono and CTSTCO = :constantValue and CTLNCD = :language

connector.nonStock.items.retrive=Select MMITNO from ${connector.dbSchema}.MITMAS where MMCONO = :cono and MMSTCD = 0 and MMSALE = 1

connector.customerOrder.header.retrieve=select OAORNO, OAPYCD, OATEPY from ${connector.dbSchema}.OOHEAD where OACONO = :cono and OAORNO = :orderNo

conector.stock.filterbyzone.retrieve=SELECT MLITNO AS ITNO, SUM(MLSTQT) AS totalOnHand, SUM(MLALQT) AS totalAllocated, SUM(MLSTQT - MLALQT) AS allocatableNet FROM ${connector.dbSchema}.MITLOC WHERE MLITNO in ( :itemNos ) AND MLALOC = '1' AND MLSLTP = :stockZone AND MLWHLO = :whlo AND MLCONO = :cono GROUP BY MLITNO

connector.creditCardReference.insert=INSERT INTO ${connector.dbSchema}.CCREFE (CCCONO,CCNREF,CCREFE,CCRGDT,CCRGTM,CCLMDT,CCCHNO,CCCHID) VALUES(:CONO, :NREF, :REFE, :RGDT, :RGTM, :LMDT, :CHNO, :CHID)

connector.creditCardAuthorization.insert=INSERT INTO ${connector.dbSchema}.CRCCAT (CCCONO,CCDIVI,CC3RDP,CCNREF,CCRORC,CCEXP0,CCCCEC,CCMSG1,CCMSG2,CCCCAA,CCCUCD,CCSTAT,CCCANU,CCCTPY,CCCPCT,CCTRTY,CCTXID,CCRGDT,CCRGTM,CCLMDT,CCCHNO,CCCHID) VALUES(:CONO, :DIVI, :3RDP, :NREF, :RORC, :EXP0, :CCEC, :MSG1, :MSG2, :CCAA, :CUCD, :STAT, :CANU, :CTPY, :CPCT, :TRTY, :TXID, :RGDT, :RGTM, :LMDT, :CHNO, :CHID)